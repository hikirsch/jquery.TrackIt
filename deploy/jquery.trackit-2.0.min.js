/*************************************************************************
 * jquery.TrackIt.js - Version 2.0
 *************************************************************************
 * @author Aaron Lisman (Aaron.Lisman@ogilvy.com)
 * @author Adam S. Kirschner (AdamS.Kirschner@ogilvy.com)
 * Copyright (C) 2010 
 *************************************************************************
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>. 
 ************************************************************************/
 var Void=function(){};if(!window.console){window.console={warn:Void,log:Void,error:Void,info:Void}}if(!window.console.group){window.console=$.extend(window.console,{group:Void,groupEnd:Void,groupCollapsed:Void,dir:Void})}var cloneObj=function(b){var d={};for(var a in b){if(b[a]!==undefined){if(typeof b[a]==="object"){d[a]=cloneObj(b[a])}else{d[a]=b[a]}}}return d};(function(a){a.initTrackIt=function(c,b){return new a.TrackIt(c,b)};a.TrackIt=function(d,c){var b=this;this.settings=a.extend(this.defaults,c.Settings);if(this.settings.ShowDebugInfo){console.group("$.TrackIt() - Init")}if(this.settings.TestMode&&this.settings.ShowDebugInfo){console.groupCollapsed("$.TrackIt() - Test Mode is Enabled, Tracking Disabled!")}else{if(this.settings.ShowDebugInfo){console.info("$.TrackIt() - Tracking Enabled. Debug Mode On.")}}this.InitDudLink();this.loadTrackingModule(d);this.__CALLBACK_EVENTS={};a.each(this.__GLOBAL_EVENTS,function(){b.__CALLBACK_EVENTS[this+""]=[]});this.__READY=[];if(c.GlobalHolders){a.extend(this.BuiltInHolders,c.GlobalHolders)}a(this.settings.TrackKeyCssSelector).live("click",function(){b.HandleGenericClick(this)});if(c.Plugins){a.each(c.Plugins,function(){if(this["Init"]&&a.isFunction(this["Init"])){this.Init.apply(b)}})}if(this.settings.ShowDebugInfo){console.groupEnd()}if(c.XmlUrl){this.loadXml(c.XmlUrl,c.TrackData)}else{this.TrackData=a.extend({},c.TrackData);this.ready()}};a.extend(a.TrackIt.prototype,{__GLOBAL_EVENTS:["afterProcessHolders","beforeProcessHolders","beforeTrack","afterTrack"],__INDIVIDUAL_EVENTS:["afterProcessHolders","beforeProcessHolders","beforeTrack","afterTrack"],defaults:{TrackKeyCssSelector:"*",TestMode:false,TrackKeyAttribute:"trackKey",EnableUrlMappingWithDeepLink:false,ShowMissingHolderWarnings:false,ShowDebugInfo:false,SanityCheckEnabled:false,SanityCheckMissingOnly:false,SanityCheckFromFlash:false,ShowOnlyReportedData:false},HandleGenericClick:function(c){var b=a(c).attr(this.settings.TrackKeyAttribute);if(b!==undefined&&b.text().length>0){this.track(b,{ele:c})}},InitDudLink:function(){if(a.TrackIt.DudHtmlLink!==undefined&&this.DudHtmlLink===undefined){this.DudHtmlLink=a.TrackIt.DudHtmlLink}else{if(this.DudHtmlLink===undefined){a.TrackIt.DudHtmlLink=this.DudHtmlLink=a("<a></a>").css("display","none");a(document.body).append(this.DudHtmlLink)}}},loadTrackingModule:function(b){switch(b.toLowerCase()){case"googleanalytics":case"google":case"ga":a.extend(this,window.TrackingModules.GoogleAnalytics);break;case"omniture":case"omni":a.extend(this,window.TrackingModules.Omniture);break;default:console.error("WARNING: No valid tracking module was specified!")}},loadXml:function(c,d){var b=this;a.ajax({url:c,complete:function(e){if(e.responseText.length>0){b.TrackData=a.extend(b.parseXml(e.responseText),d)}b.ready()}})},parseXml:function(b){var c={};b=this.getXmlObject(b).getElementsByTagName("trackEvent");a(b).each(function(){if(this.tagName){var d=a(this);var e={urlMap:d.attr("urlMap"),event:d.attr("event")};a(this.childNodes).each(function(){if(this.tagName){e[this.tagName]=a(this).text()}});c[d.attr("eventName")]=e}});return c},getXmlObject:function(f){var c;try{var b=(a.browser.msie)?new ActiveXObject("Microsoft.XMLDOM"):new DOMParser();b.async=false}catch(d){throw new Error("XML Parser could not be instantiated")}try{if(a.browser.msie){c=(b.loadXML(f))?b:false}else{c=b.parseFromString(f,"text/xml")}}catch(d){throw new Error("Error parsing XML string")}return c},isReady:false,ready:function(b){if(this.isReady){b.apply(self)}else{if(a.isFunction(b)){this.__READY.push(b)}else{if(arguments.length===0){this.isReady=true;a.each(this.__READY,function(){this.apply(self)});delete this.__READY}}}},addCallback:function(b,c){if(this.settings.ShowDebugInfo){console.info("$.TrackIt.addCallback() - Adding Callback to '"+b+"'",c)}if(a.inArray(b,this.__GLOBAL_EVENTS>-1)){this.__CALLBACK_EVENTS[b].push(c)}else{if(this.settings.ShowDebugInfo){console.warn("$.TrackIt.addCallback() - Failed to add callback to '"+b+"'! ",c)}}},fireEvent:function(c,e){var d=true;var b=this;if(typeof c==="string"){if(this.__CALLBACK_EVENTS[c]&&this.__CALLBACK_EVENTS[c].length>0){if(this.settings.ShowDebugInfo){console.group("$.TrackIt.fireEvent() - Firing Global Event '"+c+"'")}a.each(this.__CALLBACK_EVENTS[c],function(){if(this.apply(b,[e])===false){d=false}});if(this.settings.ShowDebugInfo){console.groupEnd()}}if(e&&e.key&&this.TrackData[e.key]&&this.TrackData[e.key][c]&&a.isFunction(this.TrackData[e.key][c])){if(this.settings.ShowDebugInfo){console.info("$.TrackIt.fireEvent() - Firing Local Event '"+c+"'")}if(this.TrackData[e.key][c].apply(b,[e])===false){d=false}}}return d},track:function(c,b){if(typeof b==="string"){b=window["eval"]("("+b+")")}else{if(b==null){b={}}}if(this.settings.ShowDebugInfo){console.groupCollapsed("$.TrackIt.track() - key='",c,"' options=",b)}if(this.TrackData[c]!==undefined){var d=this.GetParsedData(c,b);if(this.fireEvent("beforeTrack",{key:c,options:b,parsedData:d})){if(d.event&&d.event.toLowerCase()=="pageview"){if(this.settings.ShowDebugInfo){console.info('$.TrackIt.track()-->DoTrackPageView("'+c+'")')}this.DoTrackPageView(d,b)}else{if(this.settings.ShowDebugInfo){console.info('$.TrackIt.track()-->DoTrackEvent("'+c+'")')}this.DoTrackEvent(d,b)}this.fireEvent("afterTrack",{key:c,options:b,parsedData:d})}else{if(this.settings.ShowDebugInfo){console.info("$.TrackIt.track() - beforeTrack returned false. Skipping track.")}}}if(this.settings.ShowDebugInfo){console.groupEnd()}},GetParsedData:function(c,b){var d=null;if(this.TrackData[c]){d=cloneObj(this.TrackData[c]);for(var e in d){if(!a.isFunction(d[e])){d[e]=unescape(this.ReplaceHolders(d[e],c,b))}}}return d},GetPlaceHolderArray:function(b){return b.match(/\[[^\]]+\]/g)},BuiltInHolders:{TEXT:function(){return a(this).text()},TITLE:function(){return document.title},H1:function(){return a("H1").text()},ALT:function(){return a(this).attr("alt")},HREF:function(){var b=a(this).attr("href");if(b.indexOf(location.host)>-1){b=b.substr(b.indexOf(location.host)+location.host.length)}return b},ATTR:function(b){return a(this).attr(b.value)},"ATTR+":function(c){var b=a(this).parents("*["+c.value+"]");if(b.length>0){return a(b[0]).attr(c.value)}},PAGENAME:function(){var b=window.location.pathname.split("/");return b[b.length-1]},URL:function(){return document.location.pathname}},ReplaceHolders:function(h,k,l){var b=true;if(this.TrackData[k]["beforeReplaceHolders"]&&a.isFunction(this.TrackData[k]["beforeReplaceHolders"])){b=this.TrackData[k]["beforeReplaceHolders"].apply(this,[{key:k,str:h,options:l}])}var c=this.GetPlaceHolderArray(h);if(c&&b!==false){for(var g=0;g<c.length;g++){var i=c[g];var d="";var f=i.toString().substring(1,(i.length-1)).toString().split(":");var e=f[0];var j=f[1];if(a.isFunction(this.TrackData[k][e])){d=this.TrackData[k][e].apply(l.ele||null,[{instance:this,key:k,value:j}])}else{if(typeof this.TrackData[k][e]==="string"){d=this.TrackData[k][e]}else{if(l&&a.isFunction(l[e])){d=l[e].apply(l.ele||null,[{instance:this,key:k,value:j}])}else{if(l&&typeof l[e]=="string"){d=l[e]}else{if(this.BuiltInHolders[e]&&a.isFunction(this.BuiltInHolders[e])){d=this.BuiltInHolders[e].apply(l.ele||null,[{instance:this,key:k,value:j}])}else{if(this.BuiltInHolders[e]&&typeof this.BuiltInHolders[e]==="string"){d=this.BuiltInHolders[e]}else{if(this.settings.ShowMissingHolderWarnings&&this.settings.ShowDebugInfo){console.warn("$.TrackIt.HandleBuiltInHolder() - Missing Holder Detected - '"+e+"' in key '"+k+"'")}}}}}}}if(this.TrackData[k]["afterReplaceHolders"]&&a.isFunction(this.TrackData[k]["afterReplaceHolders"])){retVal=this.TrackData[k]["afterReplaceHolders"].apply(this,[{key:k,str:h,options:l}]);if(retVal){h=retVal}}h=h.replace(i,d)}}return h}})})(jQuery);(function(a){window.TrackingModules={GoogleAnalytics:{Type:"Google Analytics",DoTrackEvent:function(c,b){if(this.settings.ShowDebugInfo){console.info(c)}else{pageTracker._trackEvent(c.category,c.action,c.opt_label,c.opt_value)}},DoTrackPageView:function(b){if(this.settings.ShowDebugInfo){console.info(b)}else{pageTracker._trackPageview(b.pageName)}}},Omniture:{Type:"Omniture",DoTrackEvent:function(h,e){var g=s_gi(s_account);a.extend(g,h);var d=["type","event","urlMap","customLinkName"];a.each(d,function(){delete g[this]});var c=[];for(var i in h){if(!(d[i])){c.push(i)}}g.linkTrackVars=c.join(",");if(g.events&&g.events.length>0){g.linkTrackEvents=g.events}if(this.settings.TestMode&&(this.settings.ShowOnlyReportedData||this.settings.ShowDebugInfo)){console.groupCollapsed("TrackItModules.Omniture.DoTrackEvent() - Track Event Skipped:");console.dir({s:g,data:h});console.groupEnd()}else{if(e["link url"]&&e["link text"]){this.DudHtmlLink.attr("href",e["link url"]).text(e["link text"])}var b=null;if(this.DudHtmlLink&&this.DudHtmlLink.length>0){b=this.DudHtmlLink.get(0)}g.tl(e.ele||b,h.customLinkType||"o",h.customLinkName||null);if(this.settings.ShowDebugInfo||this.settings.ShowOnlyReportedData){console.groupCollapsed("TrackItModules.Omniture.DoTrackEvent() - Event tracked successfully.");console.dir({s:g,data:h});console.groupEnd()}this.DudHtmlLink.attr("href","").text("");for(var f in h){delete g[f]}}},DoTrackPageView:function(c){a.extend(s,c);if(this.settings.TestMode&&(this.settings.ShowOnlyReportedData||this.settings.ShowDebugInfo)){console.groupCollapsed("TrackItModules.Omniture.DoTrackPageView() - Page View tracking is being skipped.");console.dir({s:s,data:c});console.groupEnd()}if(!this.settings.TestMode){s.t();if(this.settings.ShowDebugInfo||this.settings.ShowOnlyReportedData){console.groupCollapsed("TrackItModules.Omniture.DoTrackPageView() - Page View tracked successfully.");console.dir({s:s,data:c});console.groupEnd()}}for(var b in c){delete s[b]}}}}})(jQuery);(function(a){window.TrackItPlugins={DataSanityCheck:{Init:function(){this.ready(window.TrackItPlugins.DataSanityCheck.Go)},Go:function(l,d){holderStatus={};if(!l){l={}}if(!d){d={}}for(var m in this.TrackData){if(!this.settings.SanityCheckMissingOnly){holderStatus[m]={}}keyData=cloneObj(this.TrackData[m]);for(var e in keyData){var h=keyData[e];if(typeof h=="string"){var b=this.GetPlaceHolderArray(h);if(b){for(var f=0;f<b.length;f++){var j=b[f];var g=j.toString().substring(1,(j.length-1)).toString().split(":");var c=g[0];var k=g[1];if(!(this.BuiltInHolders[c])&&!(keyData[c])&&!(l[c])){if(!holderStatus[m]){holderStatus[m]={}}holderStatus[m][c]=false}else{if(!this.settings.SanityCheckMissingOnly){holderStatus[m][c]=true}else{if(holderStatus[m]&&holderStatus[m][c]){delete holderStatus[m][c]}}}}}}}}if(this.settings.ShowDebugInfo){console.groupCollapsed("TrackItPlugins.DataSanityCheck() - Results");console.dir(holderStatus);console.groupEnd()}}},CopyPropToEVar:{Init:function(){this.ready(TrackItPlugins.CopyPropToEVar.Go)},Go:function(){if(this.settings.ShowDebugInfo){console.groupCollapsed("TrackItPlugins.CopyPropToEVar.Go() - Results")}var d=new RegExp("(\\d+)","g");var e={};for(var c in this.TrackData){keyData=this.TrackData[c];for(var f in keyData){if(f.indexOf("prop")>-1){var b=f.match(d)[0];keyData["eVar"+b]=keyData["prop"+b];if(!e[c]){e[c]={}}e[c]["eVar"+b]=keyData[f]}}}if(this.settings.ShowDebugInfo){console.dir(e);console.groupEnd()}}},CheckUrlMapping:{Init:function(){this.ready(window.TrackItPlugins.CheckUrlMapping.Go)},Go:function(){var d=this;if(document.location.hash.length>0&&!this.settings.EnableUrlMappingWithDeepLink){if(this.settings.ShowDebugInfo){console.info("TrackItPlugins.CheckUrlMapping.Go() - Deep Link Detected, Disabling Url Mapping")}}else{if(this.settings.ShowDebugInfo){console.group("TrackItPlugins.CheckUrlMapping.Go() - Enabled")}if(this.settings.ShowDebugInfo){console.info("TrackItPlugins.CheckUrlMapping.Go() - Check against URL: ",document.location.pathname)}var e=false;for(var c in this.TrackData){var f=this.TrackData[c];if(f.urlMap){var b=f.urlMap.split("|");a.each(b,function(){var g=this.replace("[","\\[");g=g.replace("]","\\]");g=g.replace("*",".*");if(!e&&(new RegExp("^"+g+"$","i")).test(unescape(document.location.pathname))){if(d.settings.ShowDebugInfo){console.info("TrackItPlugins.CheckUrlMapping.Go() - Found Key: '"+c+"'")}d.track(c,{});e=true}})}}if(this.settings.ShowDebugInfo&&!e){console.info("TrackItPlugins.CheckUrlMapping.Go() - Key Not Found!")}}if(this.settings.ShowDebugInfo){console.groupEnd()}}},RecordLastTrack:{Init:function(){this.__LAST_REPORT={};this.addCallback("afterTrack",function(b){window.TrackItPlugins.RecordLastTrack.__LAST_REPORT=a.extend(window.TrackItPlugins.RecordLastTrack.__LAST_REPORT,b.parsedData);if(this.settings.ShowDebugInfo){console.info("TrackItPlugins.RecordLastTrack() - Last data set saved!")}});this.BuiltInHolders.LAST=window.TrackItPlugins.RecordLastTrack.LastHolder},LastHolder:function(b){if(window.TrackItPlugins.RecordLastTrack.__LAST_REPORT&&window.TrackItPlugins.RecordLastTrack.__LAST_REPORT[b.value]){return window.TrackItPlugins.RecordLastTrack.__LAST_REPORT[b.value]}else{if(b.instance.settings.ShowDebugInfo){console.warn("TrackItPlugins.RecordLastTrack() - LAST value request not found '"+b.value+"'")}}}}}})(jQuery);